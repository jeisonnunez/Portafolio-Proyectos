//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace SalesQuotationClient.localhost1 {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DiServerServicesSampleSoap", Namespace="http://tempuri.org/wsSalesQuotation/Service1")]
    public class DiServerServicesSample : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public DiServerServicesSample() {
            this.Url = "http://localhost/wsSalesQuotation/DiServerServices.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/Login", RequestNamespace="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace="http://tempuri.org/wsSalesQuotation/Service1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, string Port) {
            object[] results = this.Invoke("Login", new object[] {
                        DataBaseServer,
                        DataBaseName,
                        DataBaseType,
                        DataBaseUserName,
                        DataBasePassword,
                        CompanyUserName,
                        CompanyPassword,
                        Language,
                        LicenseServer,
                        Port});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, string Port, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        DataBaseServer,
                        DataBaseName,
                        DataBaseType,
                        DataBaseUserName,
                        DataBasePassword,
                        CompanyUserName,
                        CompanyPassword,
                        Language,
                        LicenseServer,
                        Port}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/LogOut", RequestNamespace="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace="http://tempuri.org/wsSalesQuotation/Service1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object LogOut(string sSessionID) {
            object[] results = this.Invoke("LogOut", new object[] {
                        sSessionID});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogOut(string sSessionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogOut", new object[] {
                        sSessionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object EndLogOut(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/GetEmptyQuotationXml", RequestNamespace="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace="http://tempuri.org/wsSalesQuotation/Service1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetEmptyQuotationXml(string sSessionID) {
            object[] results = this.Invoke("GetEmptyQuotationXml", new object[] {
                        sSessionID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEmptyQuotationXml(string sSessionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEmptyQuotationXml", new object[] {
                        sSessionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetEmptyQuotationXml(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/AddQuotation", RequestNamespace="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace="http://tempuri.org/wsSalesQuotation/Service1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddQuotation(string SessionID, string sXmlQuotationObject) {
            object[] results = this.Invoke("AddQuotation", new object[] {
                        SessionID,
                        sXmlQuotationObject});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddQuotation(string SessionID, string sXmlQuotationObject, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddQuotation", new object[] {
                        SessionID,
                        sXmlQuotationObject}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndAddQuotation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/UpdateQuotation", RequestNamespace="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace="http://tempuri.org/wsSalesQuotation/Service1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateQuotation(string sSessionID, string sXmlQuotationObject) {
            object[] results = this.Invoke("UpdateQuotation", new object[] {
                        sSessionID,
                        sXmlQuotationObject});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateQuotation(string sSessionID, string sXmlQuotationObject, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateQuotation", new object[] {
                        sSessionID,
                        sXmlQuotationObject}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndUpdateQuotation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
    }
}
