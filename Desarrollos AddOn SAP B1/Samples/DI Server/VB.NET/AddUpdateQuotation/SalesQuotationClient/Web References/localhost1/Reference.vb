'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
'
Namespace localhost1
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="DiServerServicesSampleSoap", [Namespace]:="http://tempuri.org/wsSalesQuotation/Service1")>  _
    Public Class DiServerServicesSample
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/wsSalesQuotation/DiServerServices.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/Login", RequestNamespace:="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace:="http://tempuri.org/wsSalesQuotation/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(ByVal DataBaseServer As String, ByVal DataBaseName As String, ByVal DataBaseType As String, ByVal DataBaseUserName As String, ByVal DataBasePassword As String, ByVal CompanyUserName As String, ByVal CompanyPassword As String, ByVal Language As String, ByVal LicenseServer As String) As String
            Dim results() As Object = Me.Invoke("Login", New Object() {DataBaseServer, DataBaseName, DataBaseType, DataBaseUserName, DataBasePassword, CompanyUserName, CompanyPassword, Language, LicenseServer})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginLogin(ByVal DataBaseServer As String, ByVal DataBaseName As String, ByVal DataBaseType As String, ByVal DataBaseUserName As String, ByVal DataBasePassword As String, ByVal CompanyUserName As String, ByVal CompanyPassword As String, ByVal Language As String, ByVal LicenseServer As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Login", New Object() {DataBaseServer, DataBaseName, DataBaseType, DataBaseUserName, DataBasePassword, CompanyUserName, CompanyPassword, Language, LicenseServer}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndLogin(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/LogOut", RequestNamespace:="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace:="http://tempuri.org/wsSalesQuotation/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LogOut(ByVal sSessionID As String) As Object
            Dim results() As Object = Me.Invoke("LogOut", New Object() {sSessionID})
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        Public Function BeginLogOut(ByVal sSessionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LogOut", New Object() {sSessionID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndLogOut(ByVal asyncResult As System.IAsyncResult) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Object)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/GetEmptyQuotationXml", RequestNamespace:="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace:="http://tempuri.org/wsSalesQuotation/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmptyQuotationXml(ByVal sSessionID As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetEmptyQuotationXml", New Object() {sSessionID})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginGetEmptyQuotationXml(ByVal sSessionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetEmptyQuotationXml", New Object() {sSessionID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetEmptyQuotationXml(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/AddQuotation", RequestNamespace:="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace:="http://tempuri.org/wsSalesQuotation/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddQuotation(ByVal SessionID As String, ByVal sXmlQuotationObject As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("AddQuotation", New Object() {SessionID, sXmlQuotationObject})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginAddQuotation(ByVal SessionID As String, ByVal sXmlQuotationObject As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddQuotation", New Object() {SessionID, sXmlQuotationObject}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAddQuotation(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSalesQuotation/Service1/UpdateQuotation", RequestNamespace:="http://tempuri.org/wsSalesQuotation/Service1", ResponseNamespace:="http://tempuri.org/wsSalesQuotation/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateQuotation(ByVal sSessionID As String, ByVal sXmlQuotationObject As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("UpdateQuotation", New Object() {sSessionID, sXmlQuotationObject})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginUpdateQuotation(ByVal sSessionID As String, ByVal sXmlQuotationObject As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateQuotation", New Object() {sSessionID, sXmlQuotationObject}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndUpdateQuotation(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
    End Class
End Namespace
